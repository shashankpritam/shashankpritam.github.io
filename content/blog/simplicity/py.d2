explanation: |python
  ### SIR Model Coding

  import numpy as np
  from scipy.integrate import odeint
  import matplotlib.pyplot as plt

  #### SIR model differential equations.
  def sir_model(y, t, beta, gamma):
      S, I, R = y
      dS_dt = -beta * S * I
      dI_dt = beta * S * I - gamma * I
      dR_dt = gamma * I
      return ([dS_dt, dI_dt, dR_dt])

  #### Initial conditions: 990 susceptible, 10 infected, 0 recovered
  S0 = 990
  I0 = 10
  R0 = 0
  beta = 0.3  # infection rate: 0.3
  gamma = 0.1  # recovery rate: 0.1

  #### Time vector
  t = np.linspace(0, 160, 160)

  #### Integrate the SIR equations over the time grid.
  solution = odeint(sir_model, [S0, I0, R0], t, args=(beta, gamma))
  solution = np.array(solution)

  #### Plot the results
  plt.figure(figsize=[6, 4])
  plt.plot(t, solution[:, 0], label="S(t) - Susceptible")
  plt.plot(t, solution[:, 1], label="I(t) - Infected")
  plt.plot(t, solution[:, 2], label="R(t) - Recovered")
  plt.grid()
  plt.legend()
  plt.xlabel("Time (days)")
  plt.ylabel("Population")
  plt.title("SIR Model of Disease Spread")
  plt.show()
|
